exports.imixMap =  {
    imixName: 'entymsg', //imix消息名字
    map:{
        //域值和结构体字段映射关系
        //结构体定义名.字段名 : [condition].imix域.赋值类型.长度
        objectDefineName.filed_name1 : '[imix1 == 1].imix2.double' //imix消息赋值到的结构体字段，如果有条件判断则imix1和imix2需要在同层
        objectDefineName.filed_name2 : '[imix1 == 0].imix2.double'
        objectDefineName.filed_name3 : 'imix3.string.length'
    },
    repeat:{
        //重复组和子结构体对应关系
        //重复组域对应需要赋值的结构体定义名,带中括号标识赋值到结构体数组
        imix2: 'objectDefineName',
        imix3: 'objectDefineName2[]',
        imix4: 'objectDefineName3[]'
    },
    funcName: 'funcMain', //BOOL funcMain(BUFFER* imix_str, LNGTH inputmsglength, BUFFER* object)
    getNodes: 'getNodes', //BOOL getNodes(BUFFER* imix_str, LNGTH inputmsglength, FIELD_DETAILS *field_array, COUNT *filed_array_length)
    getChild: 'getChild', //BOOL getChild(BUFFER* imix_str, FIELD_DETAILS* field_ele, COUNT index, BUFFER* child_imix_str)
    getLevel: 'getLevel', //INT getLevel(tag)
    isChildTag: 'isChildTag', //BOOL isChildTag(INDC parentTag, INDC tag)
    fileName: 'funcMain.c', //生成的文件
    maxFieldCount: 256 //同层级最大域个数
}




//[struct_name][filed_name][type][length]
